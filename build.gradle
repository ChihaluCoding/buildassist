plugins {
        id 'fabric-loom' version "${loom_version}" apply false
        id 'java'
        id 'maven-publish'
}

def defaultStubSetting = providers.gradleProperty("defaultUseMinecraftStubs").map { it.toBoolean() }.getOrElse(false)
def useMinecraftStubs = providers.gradleProperty("useMinecraftStubs").map { it.toBoolean() }.getOrElse(defaultStubSetting)

if (!useMinecraftStubs) {
        apply plugin: 'fabric-loom'
        logger.lifecycle("Fabric Loom enabled - using real Minecraft dependencies")
} else {
        logger.lifecycle("Offline mode active - using bundled Minecraft stubs")
}

version = project.mod_version
group = project.maven_group

base {
        archivesName = project.archives_base_name
}

if (useMinecraftStubs) {
        sourceSets {
                main {
                        java.srcDir('src/stubs/java')
                        java.srcDir('src/client/java')
                        resources.srcDir('src/client/resources')
                        java.exclude('chihalu/buildassist/mixin/**')
                        java.exclude('chihalu/buildassist/mixin/client/**')
                }
        }
}

repositories {
        // Additional repositories for mod dependencies can be declared here when required.
}

if (!useMinecraftStubs) {
        loom {
                splitEnvironmentSourceSets()

                mods {
                        "buildassist" {
                                sourceSet sourceSets.main
                                sourceSet sourceSets.client
                        }
                }
        }

        fabricApi {
                configureDataGeneration {
                        client = true
                }
        }
}

dependencies {
        if (useMinecraftStubs) {
                // No external dependencies are required when compiling against the stub classes.
        } else {
                // To change the versions see the gradle.properties file
                minecraft "com.mojang:minecraft:${project.minecraft_version}"
                mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
                modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

                // Fabric API. This is technically optional, but you probably want it anyway.
                modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"
        }
}

processResources {
        inputs.property "version", project.version

        filesMatching("fabric.mod.json") {
                expand "version": inputs.properties.version
        }
}

tasks.withType(JavaCompile).configureEach {
        it.options.release = 21
}

java {
        withSourcesJar()

        sourceCompatibility = JavaVersion.VERSION_21
        targetCompatibility = JavaVersion.VERSION_21
}

if (useMinecraftStubs) {
        tasks.withType(Jar).configureEach {
                exclude("net/fabricmc/**")
                exclude("net/minecraft/**")
                exclude("org/slf4j/**")
        }
}

jar {
        inputs.property "archivesName", project.base.archivesName

        from("LICENSE") {
                rename { "${it}_${inputs.properties.archivesName}"}
        }
}

if (!useMinecraftStubs) {
        publishing {
                publications {
                        create("mavenJava", MavenPublication) {
                                artifactId = project.archives_base_name
                                from components.java
                        }
                }

                repositories {
                        // Add repositories to publish to here.
                }
        }
}
